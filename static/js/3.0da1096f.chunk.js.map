{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/form-input/FormInput.component.jsx","Components/signin/SignIn.component.jsx","Components/sign-up/SignUp.component.jsx","Pages/sign-in-sign-up-page/SignInSignUp.component.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","FormInput","changeHandler","label","id","otherProps","className","onChange","htmlFor","SignIn","props","useState","email","setEmail","password","setpassword","submitHandler","e","a","preventDefault","document","activeElement","blur","auth","signInWithEmailAndPassword","userCredentials","console","log","message","alert","signInWithGoogleHandler","signInWithGoogle","onChangeHandler","target","name","action","onSubmit","bind","type","required","isGoogleSignIn","onClick","SignUp","displayName","confirmPassword","userData","setUserData","createUserWithEmailAndPassword","userCredential","createUserProfileDocument","user","prevState","SignInSignUp"],"mappings":"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","file":"static/js/3.0da1096f.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\r\nimport './FormInput.styles.scss';\r\n\r\nconst FormInput = ({ changeHandler, label, id, ...otherProps }) => {\r\n  return (\r\n    <div className='group'>\r\n      <input\r\n        id={id}\r\n        className='form-input'\r\n        onChange={changeHandler}\r\n        {...otherProps}\r\n      ></input>\r\n      {label ? (\r\n        <label\r\n          className={`${\r\n            otherProps.value.length ? 'shrink' : ''\r\n          } form-input-label`}\r\n          htmlFor={id}\r\n        >\r\n          {label}\r\n        </label>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React, { useState } from 'react';\r\nimport './SignIn.styles.scss';\r\nimport FormInput from '../form-input/FormInput.component';\r\nimport CustomButton from '../custom-button/CustomButton.component';\r\nimport { signInWithGoogle, auth } from '../../firebase/firebase.utils';\r\n\r\nconst SignIn = props => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setpassword] = useState('');\r\n\r\n  const submitHandler = async e => {\r\n    e.preventDefault();\r\n    document.activeElement.blur();\r\n    try {\r\n      const userCredentials = await auth.signInWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n      console.log(userCredentials);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      alert(error.message);\r\n    }\r\n    setEmail('');\r\n    setpassword('');\r\n  };\r\n\r\n  const signInWithGoogleHandler = async () => {\r\n    try {\r\n      await signInWithGoogle();\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const onChangeHandler = e => {\r\n    const { value, name } = e.target;\r\n    name === 'email' ? setEmail(value) : setpassword(value);\r\n  };\r\n\r\n  return (\r\n    <div className='sign-in'>\r\n      <h2>Already have an account</h2>\r\n      <span>Sign in with your email and password</span>\r\n      <form action='' onSubmit={submitHandler.bind(this)}>\r\n        <FormInput\r\n          id='emailInput'\r\n          name='email'\r\n          type='email'\r\n          value={email}\r\n          onChange={onChangeHandler.bind(this)}\r\n          label='Email'\r\n          required\r\n        ></FormInput>\r\n        <FormInput\r\n          id='passwordInput'\r\n          name='password'\r\n          type='password'\r\n          value={password}\r\n          onChange={onChangeHandler.bind(this)}\r\n          label='Password'\r\n          required\r\n        ></FormInput>\r\n        <div className='buttons'>\r\n          <CustomButton type='submit'>Sign In</CustomButton>\r\n          <CustomButton isGoogleSignIn={true} onClick={signInWithGoogleHandler}>\r\n            Sign In with GOOGLE\r\n          </CustomButton>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n// class SignIn extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       email: '',\r\n//       password: '',\r\n//     };\r\n//   }\r\n\r\n//   submitHandler = async e => {\r\n//     e.preventDefault();\r\n//     document.activeElement.blur();\r\n//     try {\r\n//       const userCredentials = await auth.signInWithEmailAndPassword(\r\n//         this.state.email,\r\n//         this.state.password\r\n//       );\r\n//       console.log(userCredentials);\r\n//     } catch (error) {\r\n//       console.log(error.message);\r\n//       alert(error.message);\r\n//     }\r\n//     this.setState({ email: '', password: '' });\r\n//   };\r\n\r\n//   async signInWithGoogleHandler() {\r\n//     try {\r\n//       await signInWithGoogle();\r\n//     } catch (error) {\r\n//       console.log(error.message);\r\n//     }\r\n//   }\r\n\r\n//   onChangeHandler = e => {\r\n//     const { value, name } = e.target;\r\n//     this.setState({ [name]: value });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className='sign-in'>\r\n//         <h2>Already have an account</h2>\r\n//         <span>Sign in with your email and password</span>\r\n//         <form action='' onSubmit={this.submitHandler.bind(this)}>\r\n//           <FormInput\r\n//             id='emailInput'\r\n//             name='email'\r\n//             type='email'\r\n//             value={this.state.email}\r\n//             onChange={this.onChangeHandler.bind(this)}\r\n//             label='Email'\r\n//             required\r\n//           ></FormInput>\r\n//           <FormInput\r\n//             id='passwordInput'\r\n//             name='password'\r\n//             type='password'\r\n//             value={this.state.password}\r\n//             onChange={this.onChangeHandler.bind(this)}\r\n//             label='Password'\r\n//             required\r\n//           ></FormInput>\r\n//           <div className='buttons'>\r\n//             <CustomButton type='submit'>Sign In</CustomButton>\r\n//             <CustomButton\r\n//               isGoogleSignIn={true}\r\n//               onClick={this.signInWithGoogleHandler}\r\n//             >\r\n//               Sign In with GOOGLE\r\n//             </CustomButton>\r\n//           </div>\r\n//         </form>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default SignIn;\r\n","import React, { useState } from 'react';\r\nimport './SignUp.styles.scss';\r\nimport FormInput from '../form-input/FormInput.component';\r\nimport CustomButton from '../custom-button/CustomButton.component';\r\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\r\n\r\nconst SignUp = props => {\r\n  const [userData, setUserData] = useState({\r\n    displayName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n\r\n  const submitHandler = async e => {\r\n    e.preventDefault();\r\n    document.activeElement.blur();\r\n    // console.log('submitHandler');\r\n    if (userData.password !== userData.confirmPassword) {\r\n      alert(`Passwords don't match`);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const userCredential = await auth.createUserWithEmailAndPassword(\r\n        userData.email,\r\n        userData.password\r\n      );\r\n      //   console.log(userCredential);\r\n\r\n      await createUserProfileDocument(userCredential.user, {\r\n        displayName: userData.displayName,\r\n      });\r\n      setUserData({\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n      });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  const changeHandler = e => {\r\n    // console.log('changeHandler');\r\n    setUserData(prevState => {\r\n      return {\r\n        ...prevState,\r\n        [e.target.name]: e.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='sign-up'>\r\n      <h2>I do not have an account</h2>\r\n      <span>Sign up with your email and password</span>\r\n      <form className='sign-up-form' onSubmit={submitHandler}>\r\n        <FormInput\r\n          type='text'\r\n          name='displayName'\r\n          label='Display name'\r\n          value={userData.displayName}\r\n          required\r\n          id='DI1'\r\n          onChange={changeHandler}\r\n        ></FormInput>\r\n        <FormInput\r\n          type='email'\r\n          name='email'\r\n          label='Email'\r\n          value={userData.email}\r\n          required\r\n          id='EI1'\r\n          onChange={changeHandler}\r\n        ></FormInput>\r\n        <FormInput\r\n          type='password'\r\n          name='password'\r\n          label='Password'\r\n          value={userData.password}\r\n          required\r\n          id='PI1'\r\n          onChange={changeHandler}\r\n        ></FormInput>\r\n        <FormInput\r\n          type='password'\r\n          name='confirmPassword'\r\n          label='Confirm Password'\r\n          value={userData.confirmPassword}\r\n          required\r\n          id='CPI1'\r\n          onChange={changeHandler}\r\n        ></FormInput>\r\n        <CustomButton type='submit'>Create an account</CustomButton>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\nimport SignIn from '../../Components/signin/SignIn.component';\r\nimport './SignInSignUp.style.scss';\r\nimport SignUp from '../../Components/sign-up/SignUp.component';\r\n\r\nconst SignInSignUp = () => {\r\n  return (\r\n    <div className='sign-in-and-sign-up'>\r\n      <SignIn></SignIn>\r\n      <SignUp></SignUp>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignInSignUp;\r\n"],"sourceRoot":""}